File train_dna = csv_file("../../data/fm_train_dna.dat")
File test_dna = csv_file("../../data/fm_test_dna.dat")
File labels_train_dna = csv_file("../../data/label_train_dna.dat")
File labels_test_dna = csv_file("../../data/label_test_dna.dat")

#![create_features]
Features features_train = features(train_dna)
Features features_test = features(test_dna)
Labels labels_train = labels(labels_train_dna)
Labels labels_test = labels(labels_test_dna)
#![create_features]

#![create_instance_1]
Kernel k = kernel("WeightedDegreeStringKernel", degree=5)
#![create_instance_1]

#![create_instance_2]
Kernel k2 = kernel("WeightedDegreePositionStringKernel", degree=5)
#![create_instance_2]

#![create_instance_3]
Kernel k3 = kernel("FixedDegreeStringKernel", degree=5)
#![create_instance_3]

#![create_instance_4]
Kernel k4 = kernel("LocalityImprovedStringKernel", length=5, inner_degree=5, outer_degree=1)
#![create_instance_4]

#![create_instance_5]
Kernel k5 = kernel("LocalAlignmentStringKernel")
#![create_instance_5]

#![create_instance_6]
Kernel k6 = kernel("PolyMatchStringKernel", degree=3, inhomogene=True)
#![create_instance_6]

#![create_svm]
k.init(features_train, features_train)
Machine svm = machine("LibSVM", C1=1.0, kernel=k, labels=labels_train)
#![create_svm]


#![train_and_apply]
svm.train(features_train)
Labels labels_predict = svm.apply(features_test)
#![train_and_apply]

#![evaluate]
PRCEvaluation prc_evaluator()
ROCEvaluation roc_evaluator()
real auROC = roc_evaluator.evaluate(labels_predict, labels_test)
real auPRC = prc_evaluator.evaluate(labels_predict, labels_test)
#![evaluate]

